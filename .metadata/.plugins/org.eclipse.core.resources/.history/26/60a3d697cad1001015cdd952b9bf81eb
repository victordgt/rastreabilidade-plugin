package rastreabilidade.plugin.artefato;

import java.lang.annotation.Annotation;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.jdt.core.ICompilationUnit;
import org.eclipse.jdt.core.IJavaProject;
import org.eclipse.jdt.core.IType;
import org.eclipse.jdt.core.JavaCore;

import rastreabilidade.plugin.util.PluginUtil;

public abstract class GerenciadorArtefato {
	
	protected Class<? extends Annotation> clazz;
	protected Map<String, List<IType>> mapaArtefatos = new HashMap<String, List<IType>>();
	
	protected GerenciadorArtefato(Class<? extends Annotation> clazz) {
		this.clazz = clazz;
	}
	
	
	public void constroiMapa() {
		IProject[] projects = ResourcesPlugin.getWorkspace().getRoot()
		.getProjects();

		PluginUtil pluginUtil = new PluginUtil();

		for (IProject project : projects) {
			try {
				project.open(null);
			} catch (CoreException e) {
				e.printStackTrace();
			}


			IJavaProject javaProject = JavaCore.create(project);

			pluginUtil.recuperaRecursosProjeto(javaProject);

			List<ICompilationUnit> compilaveis = pluginUtil.recuperaRecursosProjeto(javaProject);
			List<IType> classesComAnotacao = pluginUtil.recuperaElementosComAnotacao(clazz, compilaveis);

			filtrar(classesComAnotacao);

		}		
	}
	
	
	protected abstract void filtrar(List<IType> classesComAnotacao);

}
